import scipy
import numpy
cd larpy
from lar import *

def GRID(args):
	model = ([[]],[[0]])
	for k,steps in enumerate(args):
		model = larExtrude(model,steps*[1])
	V,cells = model
	verts = AA(list)(scipy.array(V)/AA(float)(args))
	return MKPOL([verts,AA(AA(lambda h:h+1))(cells),None])

dom1D = GRID([20])

dom2D = GRID([20,20])

#curva di bezier 

def bc(points):
	curve = BEZIER(S1)(points)
	return MAP(curve)(dom1D)


#LEFTSIDE

pl00 = [[1.31, 3.78, 0], [1.11, 4.74, 0], [2.38, 4.58, 0], [2.14, 3.78, 0]]
pl01 = [[4.36, 3.78, 0], [4.07, 4.57, 0], [5.41, 4.73, 0], [5.18, 3.78, 0]]
cl00 = bc(pl00)
cl01 = bc(pl01)
pl02 = [[5.18, 3.78, 0], [5.33, 3.76, 0], [5.46, 3.83, 0], [5.63, 3.97, 0]]
cl02 = bc(pl02)
pl03 = [[0.61, 3.81, 0], [0.83, 3.8, 0], [1.07, 3.79, 0], [1.31, 3.78, 0]]
cl03 = bc(pl03)
pl04 = [[0.68, 4.14, 0], [1.06, 4.42, 0], [1.34, 4.68, 0], [2.22, 4.5, 0]]
cl04 = bc(pl04)
pl05 = [[2.23, 4.46, 0], [3.97, 4.59, 0], [4.65, 4.78, 0], [5.36, 4.64, 0]]
cl05 = bc(pl05)
pl06 = [[5.52, 4.17, 0], [5.49, 4.36, 0], [5.47, 4.57, 0], [5.36, 4.64, 0]]
cl06 = bc(pl06)
pl07 = [[5.54, 4.71, -0.1], [4.45, 4.85,-0.1], [2.41, 4.41, -0.1], [1.9, 4.6, -0.1]]
cl07 = bc(pl07)
pl08 = [[5.54, 4.71, -0.1], [4.84, 4.8, -0.1], [4.58, 4.84, -0.1], [3.88, 4.92, -0.1]]
cl08 = bc(pl08)
pl09 = [[3.88, 4.96, -0.1], [3.56, 4.96, -0.1], [2.86, 5.2, -0.1], [1.55, 4.6, -0.1]]
cl09 = bc(pl09)

pl10 = [[0.43, 4.13, -0.1], [0.62, 4.24, -0.1], [1.29, 4.7, -0.1], [1.9, 4.6, -0.1]]
cl10 = bc(pl10)
pl11 = [[1.9, 4.6, -0.1], [2.96, 5.23, -0.1], [4.39, 4.84, -0.1], [4.33, 4.72, -0.1]]
cl11 = bc(pl11)
cl12 = bc([[2.14, 3.78, 0], [4.36, 3.78, 0]])
cl13 = bc([[5.49, 4, 0], [5.63, 3.97, 0]])
cl14 = bc([[5.49, 4, 0], [5.52, 4.17, 0]])
cl15 = bc([[3.88, 4.92, -0.1],[3.88, 4.96, -0.1]])
cl16 = bc([[2.29, 4.55, -0.1],[2.22, 4.5, 0]])
cl17 = bc([[2.22, 4.5, 0],[2.23, 3.85, 0]])
cl18 = bc([[0.76, 3.93, 0],[0.61, 3.81, 0]])
cl19 = bc([[0.76, 3.93, 0],[0.68, 4.14, 0]])

cl20 = bc([[0.68, 4.14, 0],[0.43, 4.13, -0.1]])
cl21 = bc([[2.16, 3.85, 0],[4.31, 3.92, 0]])
cl22 = bc([[0.43, 4.13, -0.1],[0.56, 3.96, -0.1]])
cl23 = bc([[0.56, 3.96, -0.1],[0.52, 3.83, -0.1]])
cl24 = bc([[0.52, 3.83, -0.1],[0.61, 3.81, 0]])
cl25 = bc([[5.36, 4.64, 0],[5.54, 4.71, 0]])
cl26 = bc([[2.66, 4.96, -0.1], [2.7, 4.93, -0.1]])
pl27 = [[1.78, 4.61, -0.1], [1.98, 4.68, -0.1], [2.38, 4.87, -0.1], [2.7, 4.93, -0.1]]
cl27 = bc(pl27)
cl28 = bc([[5.54,4.71, -0.1], [5.54,4.71, 0]])
cl29 = bc([[5.52, 4.17, 0], [5.65, 4.19, 0]])
cl290 = bc([[5.65, 4.19, 0], [5.54,4.71, 0]])

left0 = STRUCT([cl00,cl01,cl02,cl03,cl04,cl05,cl06,cl07,cl08,cl09])

left1 = STRUCT([cl10,cl11,cl12,cl13,cl14,cl15,cl16,cl17,cl18,cl19])

left2 = STRUCT([cl20,cl21,cl22,cl23,cl24,cl25,cl26,cl27,cl28,cl29,cl290])

left = STRUCT([left0,left1,left2])

#VIEW(left)

#RIGHTSIDE

pr00 = [[1.31, 3.78, -2.5], [1.11, 4.74, -2.5], [2.38, 4.58, -2.5], [2.14, 3.78, -2.5]]
pr01 = [[4.36, 3.78, -2.5], [4.07, 4.57, -2.5], [5.41, 4.73, -2.5], [5.18, 3.78, -2.5]]
cr00 = bc(pr00)
cr01 = bc(pr01)
pr02 = [[5.18, 3.78, -2.5], [5.33, 3.76, -2.5], [5.46, 3.83, -2.5], [5.63, 3.97, -2.5]]
cr02 = bc(pr02)
pr03 = [[0.61, 3.81, -2.5], [0.83, 3.8, -2.5], [1.07, 3.79, -2.5], [1.31, 3.78, -2.5]]
cr03 = bc(pr03)
pr04 = [[0.68, 4.14, -2.5], [1.06, 4.42, -2.5], [1.34, 4.68, -2.5], [2.22, 4.5, -2.5]]
cr04 = bc(pr04)
pr05 = [[2.23, 4.46, -2.5], [3.97, 4.59, -2.5], [4.65, 4.78, -2.5], [5.36, 4.64, -2.5]]
cr05 = bc(pr05)
pr06 = [[5.52, 4.17, -2.5], [5.49, 4.36, -2.5], [5.47, 4.57, -2.5], [5.36, 4.64, -2.5]]
cr06 = bc(pr06)
pr07 = [[5.54, 4.71, -2.4], [4.45, 4.85, -2.4], [2.41, 4.41, -2.4], [1.9, 4.6, -2.4]]
cr07 = bc(pr07)
pr08 = [[5.54, 4.71, -2.4], [4.84, 4.8, -2.4], [4.58, 4.84, -2.4], [3.88, 4.92, -2.4]]
cr08 = bc(pr08)
pr09 = [[3.88, 4.96, -2.4], [3.56, 4.96, -2.4], [2.86, 5.2, -2.4], [1.55, 4.6, -2.4]]
cr09 = bc(pr09)

pr10 = [[0.43, 4.13, -2.4], [0.62, 4.24, -2.4], [1.29, 4.7, -2.4], [1.9, 4.6, -2.4]]
cr10 = bc(pr10)
pr11 = [[1.9, 4.6, -2.4], [2.96, 5.23, -2.4], [4.39, 4.84, -2.4], [4.33, 4.72, -2.4]]
cr11 = bc(pr11)
cr12 = bc([[2.14, 3.78, -2.5], [4.36, 3.78, -2.5]])
cr13 = bc([[5.49, 4, -2.5], [5.63, 3.97, -2.5]])
cr14 = bc([[5.49, 4, -2.5], [5.52, 4.17, -2.5]])
cr15 = bc([[3.88, 4.92, -2.4],[3.88, 4.96, -2.4]])
cr16 = bc([[2.29, 4.55, -2.4],[2.22, 4.5, -2.5]])
cr17 = bc([[2.22, 4.5, -2.5],[2.23, 3.85, -2.5]])
cr18 = bc([[0.76, 3.93, -2.5],[0.61, 3.81, -2.5]])
cr19 = bc([[0.76, 3.93, -2.5],[0.68, 4.14, -2.5]])

cr20 = bc([[0.68, 4.14, -2.5],[0.43, 4.13, -2.4]])
cr21 = bc([[2.16, 3.85, -2.5],[4.31, 3.92, -2.5]])
cr22 = bc([[0.43, 4.13, -2.4],[0.56, 3.96, -2.4]])
cr23 = bc([[0.56, 3.96, -2.4],[0.52, 3.83, -2.4]])
cr24 = bc([[0.52, 3.83, -2.4],[0.61, 3.81, -2.5]])
cr25 = bc([[5.36, 4.64, -2.5],[5.54, 4.71, -2.5]])
cr26 = bc([[2.66, 4.96, -2.4], [2.7, 4.93, -2.4]])
pr27 = [[1.78, 4.61, -2.4], [1.98, 4.68, -2.4], [2.38, 4.87, -2.4], [2.7, 4.93, -2.4]]
cr27 = bc(pr27)
cr28 = bc([[5.54,4.71,-2.5],[5.54,4.71,-2.4]])
cr29 = bc([[5.52, 4.17, -2.5], [5.65, 4.19, -2.5]])
cr290 = bc([[5.65, 4.19, -2.5], [5.54,4.71, -2.5]])

right0 = STRUCT([cr00,cr01,cr02,cr03,cr04,cr05,cr06,cr07,cr08,cr09])

right1 = STRUCT([cr10,cr11,cr12,cr13,cr14,cr15,cr16,cr17,cr18,cr19])

right2 = STRUCT([cr20,cr21,cr22,cr23,cr24,cr25,cr26,cr27,cr28,cr29,cr290])

right = STRUCT([right0,right1,right2])

#VIEW(right)

#UPSIDE

pu00 = [[2.66, 4.96, -0.1], [2.61, 4.95, -0.5], [2.61, 4.95, -1.9], [2.66, 4.96, -2.4]]
cu00 = bc(pu00)

pu01 = [[1.57, 4.6, -0.1],[1.25, 4.55, -0.5], [1.25, 4.55, -1.9],[1.57, 4.6, -2.4]]
cu01 = bc(pu01)
pu02 = [[3.88, 4.96, -0.1],[3.88, 4.96, -0.5],[3.88, 4.96, -1.9],[3.88, 4.96, -2.4]]
cu02 = bc(pu02)
pu03 = [[3.88, 4.92, -0.1],[3.88, 4.92, -0.5],[3.88, 4.92, -1.9],[3.88, 4.92, -2.4]]
cu03 = bc(pu03)
pu04 = [[0.43, 4.13,-0.1],[0.25, 4.13,-1.25]]
cu04 = bc(pu04)
pu05 = [[0.25, 4.13,-1.25],[0.43, 4.13,-2.4]]
cu05 = bc(pu05)
pu06 = [[5.54, 4.71, -0.1],[5.65, 4.71, -0.5],[5.65, 4.71, -1.9],[5.54, 4.71, -2.4]]
cu06 = bc(pu06)
pu07 = [[5.63, 3.97, 0],[5.75, 3.97, -0.5],[5.75, 3.97, -1.9],[5.63, 3.97, -2.5]]
cu07 = bc(pu07)
pu08 = [[5.52, 4.17, 0],[5.62, 4.17, -0.5],[5.62, 4.17, -1.9],[5.52, 4.17, -2.5]]
cu08 = bc(pu08)
pu09 = [[5.65, 4.19, 0],[5.75, 4.19, -0.5],[5.75, 4.19, -1.9],[5.65, 4.19, -2.5]]
cu09 = bc(pu09)

cu10 = bc([[5.61, 4.71, -0.7],[3.88, 4.92, -0.3]])
cu11 = bc([[5.61, 4.71, -1.7],[3.88, 4.92, -2.2]])

def CUBICCARDINAL (domain,h=0.1):
	def CUBICCARDINAL0(args):
		q1_fn , q2_fn , q3_fn , q4_fn = args
		def map_fn(point):
			u=S1(point)
			u2=u*u
			u3=u2*u
			q1,q2,q3,q4=[f(point) if callable(f) else f for f in [q1_fn,q2_fn,q3_fn,q4_fn]]
			
			ret=[0.0 for i in range(len(q1))]	
			for i in range(len(ret)):
				ret[i]=(-h*u3+2*h*u2-h*u)*q1[i] +((2-h)*u3+(h-3)*u2+1)*q2[i] + ((h-2)*u3+(3-2*h)*u2+h*u)*q3[i] + (h*u3-h*u2)*q4[i]

			return ret
		return MAP(map_fn)(domain)
	return CUBICCARDINAL0

cu12 = SPLINE(CUBICCARDINAL(dom1D))([[0.56, 3.96,-0.1],[0.56, 3.96,-0.1],[0.36, 3.96,-1.25],[0.56, 3.96, -2.4],[0.56, 3.96, -2.4]])

pu14 = [[0.52, 3.83,-0.1],[0.32, 3.83,-1.25]]
cu14 = bc(pu14)
pu15 = [[0.32, 3.83,-1.25],[0.52, 3.83, -2.4]]
cu15 = bc(pu15)

up0 = STRUCT([cu00,cu01,cu02,cu03,cu04,cu05,cu06,cu07,cu08,cu09])
up1 = STRUCT([cu10,cu11,cu12,cu14,cu15])

up = (STRUCT([up0,up1]))

#VIEW(up)

skeleton = STRUCT([left, right, up])

#VIEW(skeleton)

centered_sk = T([1,2,3])([-(SIZE([1])(skeleton)[0])/2-0.45,-(SIZE([2])(skeleton)[0])/2-3.78,(SIZE([3])(skeleton)[0])/2])(skeleton)

VIEW(centered_sk)



